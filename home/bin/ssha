#!/usr/bin/env bash
#vim: ft=sh

appName=$1
appEnv=$2

[[ -n $AWS_PROFILE ]] || export AWS_PROFILE=dev

jqBin=$(command -v jq)
jq() {
	"$jqBin" -r "$@"
}

eae() {
	echo "> $*"
	exec "$@"
}

debug() {
	[[ -n "${DEBUG:-}" ]] && echo "$*"
}

echo "Fetching instances"
if ! resp=$(timeout 30 aws ec2 describe-instances); then
	echo "Could not fetch instances"
	exit 1
fi

debug "$resp"

declare -a jqFilter=(
	'.Reservations | map(.Instances[]) | map(select(.State.Name == "running")) | map({InstanceId, PrivateDnsName, LaunchTime} * (.Tags | map(select(.Key == "Environment" or .Key == "Application")) | map({key:.Key,value:.Value}) | from_entries )) | sort_by(.Environment,.Application,.LaunchTime,.PrivateDnsName) | map(select(.Application != null and .Environment != null))'
)

if [[ -n ${appName:-} ]]; then
	debug "addig appname filter"
	jqFilter+=(" | map(select(.Application | test(\"${appName// /.*}\") ))")
fi
if [[ -n ${appEnv:-} ]]; then
	debug "adding env filter"
	jqFilter+=(" | map(select(.Environment | test(\"${appEnv// /.*}\") ))")
fi

echo "Filtering instances"
debug "jq \"${jqFilter[*]}\""

instances=$(jq "${jqFilter[*]}" <<<"$resp")
numInstances=$(jq 'length' <<<"$instances")
if [[ $numInstances -eq 0 ]]; then
	echo "No matching instances found"
	exit 1
fi

if [[ $numInstances -eq 1 ]]; then
	instanceName=$(jq ".[0].PrivateDnsName" <<<"$instances")
	eae ssh "$instanceName"
fi

tableData=$(jq 'to_entries | map({AAA: (.key+1)} * .value) | .[] | to_entries | sort_by(.key) | map(.value) | join("|")' <<<"$instances")
column --table -s '|' --table-columns "Num,Application,Environment,InstanceId,LaunchTime,Host" <<<"$tableData"

declare -i selection
printf "Select an instance: "
read -r selection
if [[ $selection -gt $numInstances ]]; then
	echo "invalid selection"
	exit 1
fi

instanceName=$(jq ".[$((selection - 1))].PrivateDnsName" <<<"$instances")
eae ssh "$instanceName"
